stages:
- stage: 'Build'
  jobs:
  - job: 'Debug'
    strategy:
      matrix:
        ubuntu-20.04:
          imageName: 'ubuntu-20.04'
          artifactName: 'ubuntu2004'
          binDir: 'bin'
        # ubuntu-18.04:
        #   imageName: 'ubuntu-18.04'
        # ubuntu-16.04:
        #   imageName: 'ubuntu-16.04'
        # macOS-10.15:
        #   imageName: 'macOS-10.15'
        # macOS-10.14:
        #   imageName: 'macOS-10.14'
        # windows-2019:
        #   imageName: 'windows-2019'
        # vs2017-win2016:
        #   imageName: 'vs2017-win2016'
    pool:
      vmImage: $(imageName)
    steps:
    - script: |
        mkdir cmake-build-debug
        cd cmake-build-debug
        cmake .. -DCMAKE_BUILD_TYPE=Debug
      displayName: 'CMake'
    - script: |
        cd cmake-build-debug
        make --jobs
      displayName: 'Make'
      condition: ne(variables['Agent.OS'], 'Windows_NT')
    - task: VSBuild@1
      inputs:
        solution: 'cmake-build-debug\tsc.sln'
        msbuildArgs: '-m'
      displayName: 'MSVC'
      condition: eq(variables['Agent.OS'], 'Windows_NT')
    - publish: cmake-build-debug/$(binDir)
      artifact: 'tsc-debug-$(artifactName)-$(Build.SourceVersion)'
- stage: 'Test'
  jobs:
    - job: 'Unit'
      strategy:
        matrix:
          ubuntu-20.04:
            imageName: 'ubuntu-20.04'
            artifactName: 'ubuntu2004'
      pool:
        vmImage: $(imageName)
      steps:
      - download: current
        artifact: 'tsc-debug-$(artifactName)-$(Build.SourceVersion)'
        displayName: 'Download binary'
      - bash: |
          cd ..
          chmod +x ./tsc-debug-$(artifactName)-$(Build.SourceVersion)/*
          tsc-debug-$(artifactName)-$(Build.SourceVersion)/test
        displayName: 'TSC Unit Tests'
